apply plugin: 'maven' // used for deploying artifacts to Maven repositories

buildscript {
    repositories {
        mavenCentral()
    }

    ext {
        springPlatformVersion = '1.0.2.RELEASE'
        springBootVersion = '1.1.8.RELEASE' // platform's still on 1.1.6.RELEASE
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

allprojects {
    group = 'org.openmhealth'
    version = '1.1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'spring-boot' // used for blessed dependencies and auto-configuration

    ext {
        gradleVersion = '2.1'
        javaVersion = 1.8
        jacksonVersion = '2.4.2'  // platform's still on 2.3.4, 2.4 required for Java 8
    }

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    dependencies {
        // Spring IO (http://platform.spring.io/platform) gives us curated and harmonised dependencies, whose versions
        // you can find at http://docs.spring.io/platform/docs/${springPlatformVersion}/reference/htmlsingle/#appendix-dependency-versions
        versionManagement "io.spring.platform:platform-versions:${springPlatformVersion}@properties"

        compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
        compile 'org.slf4j:jcl-over-slf4j'
        compile 'org.slf4j:log4j-over-slf4j'
        compile 'ch.qos.logback:logback-classic'
        compile 'org.slf4j:slf4j-api'
        compile 'org.springframework:spring-beans'
        compile 'org.springframework:spring-context'
        compile 'javax.validation:validation-api'

        testCompile 'org.hamcrest:hamcrest-library'
        testCompile 'junit:junit'
        testCompile 'org.mockito:mockito-core'
        testCompile 'org.springframework:spring-test'
    }
}

configure([
        project(":authorization-server"),
        project(":resource-server")]) {

    dependencies {
        compile project(':shared')
        compile 'org.apache.httpcomponents:httpclient'
        compile 'javax.mail:javax.mail-api'
        compile 'org.mongodb:mongo-java-driver'
        compile "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}"
        compile 'org.springframework.data:spring-data-mongodb'
        compile 'org.springframework:spring-jdbc'
        compile 'org.springframework.security.oauth:spring-security-oauth2'
        compile 'org.springframework:spring-tx'
        compile 'org.springframework:spring-web'
        compile 'org.springframework:spring-webmvc'

        // embed Jetty
        compile("org.springframework.boot:spring-boot-starter-web") {
            exclude module: "spring-boot-starter-tomcat"
        }
        compile("org.springframework.boot:spring-boot-starter-jetty")
    }
}

// FIXME add integration test support

task wrapper(type: Wrapper) {
    gradleVersion = gradleVersion
}
